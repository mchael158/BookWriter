<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Biblioteca - Rocket + PostgreSQL</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            text-align: center;
            position: relative;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .user-info {
            position: absolute;
            top: 20px;
            right: 20px;
            text-align: right;
        }
        
        .user-info span {
            display: block;
            margin-bottom: 5px;
        }
        
        .logout-btn {
            background: rgba(255,255,255,0.2);
            color: white;
            border: 1px solid rgba(255,255,255,0.3);
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            margin-top: 10px;
        }
        
        .logout-btn:hover {
            background: rgba(255,255,255,0.3);
        }
        
        .content {
            padding: 40px;
        }
        
        .section {
            margin-bottom: 40px;
        }
        
        .section h2 {
            color: #333;
            margin-bottom: 20px;
            font-size: 1.8rem;
            border-bottom: 3px solid #667eea;
            padding-bottom: 10px;
        }
        
        .search-bar {
            display: flex;
            gap: 10px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .search-bar input, .search-bar select {
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            flex: 1;
            min-width: 200px;
        }
        
        .search-bar input:focus, .search-bar select:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .btn {
            display: inline-block;
            padding: 12px 24px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            text-decoration: none;
            border-radius: 8px;
            font-weight: bold;
            transition: transform 0.2s;
            margin: 10px 10px 10px 0;
            border: none;
            cursor: pointer;
        }
        
        .btn:hover {
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background: #6c757d;
        }
        
        .btn-success {
            background: #28a745;
        }
        
        .btn-danger {
            background: #dc3545;
        }
        
        .books-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .book-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            border-left: 5px solid #667eea;
            transition: transform 0.2s;
        }
        
        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .book-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
        }
        
        .book-author {
            color: #666;
            margin-bottom: 10px;
        }
        
        .book-category {
            background: #667eea;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.9rem;
            display: inline-block;
            margin-bottom: 10px;
        }
        
        .book-description {
            color: #666;
            line-height: 1.6;
            margin-bottom: 15px;
        }
        
        .book-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .btn-small {
            padding: 8px 16px;
            font-size: 0.9rem;
        }
        
        .hidden {
            display: none;
        }
        
        .error {
            background: #fee;
            color: #c33;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
        }
        
        .success {
            background: #efe;
            color: #3c3;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
        }
        
        .loading {
            text-align: center;
            color: #666;
            padding: 20px;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 20px;
            border-radius: 10px;
            width: 90%;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        
        .close:hover {
            color: black;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }
        
        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
        }
        
        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .form-group textarea {
            min-height: 100px;
            resize: vertical;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="user-info">
                <span id="userName">Carregando...</span>
                <span id="userEmail">Carregando...</span>
                <a href="#" class="logout-btn" onclick="logout()">Sair</a>
            </div>
            <h1>ðŸ“š Biblioteca Digital</h1>
            <p>Descubra e leia livros incrÃ­veis</p>
        </div>
        
        <div class="content">
            <div class="section">
                <h2>Buscar Livros</h2>
                <div class="search-bar">
                    <input type="text" id="searchQuery" placeholder="Buscar por tÃ­tulo, autor ou descriÃ§Ã£o...">
                    <select id="categoryFilter">
                        <option value="">Todas as categorias</option>
                    </select>
                    <button class="btn" onclick="searchBooks()">Buscar</button>
                    <button class="btn btn-success" onclick="showCreateBookModal()">Criar Livro</button>
                </div>
                
                <div id="searchResults"></div>
            </div>
            
            <div class="section">
                <h2>Livros DisponÃ­veis</h2>
                <div id="booksContainer">
                    <div class="loading">Carregando livros...</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para criar/editar livro -->
    <div id="bookModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeBookModal()">&times;</span>
            <h2 id="modalTitle">Criar Novo Livro</h2>
            <form id="bookForm">
                <div class="form-group">
                    <label for="bookTitle">TÃ­tulo:</label>
                    <input type="text" id="bookTitle" required>
                </div>
                
                <div class="form-group">
                    <label for="bookAuthor">Autor:</label>
                    <input type="text" id="bookAuthor" required>
                </div>
                
                <div class="form-group">
                    <label for="bookIsbn">ISBN (opcional):</label>
                    <input type="text" id="bookIsbn">
                </div>
                
                <div class="form-group">
                    <label for="bookCategory">Categoria:</label>
                    <select id="bookCategory" required>
                        <option value="">Selecione uma categoria</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="bookDescription">DescriÃ§Ã£o:</label>
                    <textarea id="bookDescription" placeholder="Descreva o livro..."></textarea>
                </div>
                
                <div class="form-group">
                    <label for="bookContent">ConteÃºdo do Livro:</label>
                    <textarea id="bookContent" required placeholder="Digite o conteÃºdo do livro aqui..."></textarea>
                </div>
                
                <div class="form-group">
                    <label>
                        <input type="checkbox" id="bookPublic"> Tornar pÃºblico
                    </label>
                </div>
                
                <div class="form-group">
                    <button type="submit" class="btn">Salvar Livro</button>
                    <button type="button" class="btn btn-secondary" onclick="closeBookModal()">Cancelar</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Modal para ler livro -->
    <div id="readModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeReadModal()">&times;</span>
            <h2 id="readTitle">Lendo Livro</h2>
            <div id="readContent" style="line-height: 1.8; font-size: 16px; max-height: 60vh; overflow-y: auto; padding: 20px; background: #f8f9fa; border-radius: 8px; white-space: pre-wrap;"></div>
        </div>
    </div>

    <script>
        let currentBookId = null;
        let categories = [];

        // Carregar informaÃ§Ãµes do usuÃ¡rio
        window.onload = function() {
            const user = JSON.parse(localStorage.getItem('user') || '{}');
            if (user.name) {
                document.getElementById('userName').textContent = user.name;
                document.getElementById('userEmail').textContent = user.email;
            } else {
                window.location.href = '/login';
            }
            
            loadCategories();
            loadBooks();
        };
        
        // FunÃ§Ã£o de logout
        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('user');
            window.location.href = '/login';
        }
        
        // Carregar categorias
        async function loadCategories() {
            try {
                const response = await fetch('/categories');
                const data = await response.json();
                
                if (data.success) {
                    categories = data.data;
                    const categorySelect = document.getElementById('categoryFilter');
                    const bookCategorySelect = document.getElementById('bookCategory');
                    
                    categories.forEach(category => {
                        const option1 = new Option(category.name, category.id);
                        const option2 = new Option(category.name, category.id);
                        categorySelect.add(option1);
                        bookCategorySelect.add(option2);
                    });
                }
            } catch (err) {
                console.error('Erro ao carregar categorias:', err);
            }
        }
        
        // Carregar livros
        async function loadBooks() {
            const container = document.getElementById('booksContainer');
            container.innerHTML = '<div class="loading">Carregando livros...</div>';
            
            try {
                const response = await fetch('/books');
                const data = await response.json();
                
                if (data.success) {
                    displayBooks(data.data);
                } else {
                    container.innerHTML = `<div class="error">Erro: ${data.message}</div>`;
                }
            } catch (err) {
                container.innerHTML = '<div class="error">Erro de conexÃ£o</div>';
            }
        }
        
        // Exibir livros
        function displayBooks(books) {
            const container = document.getElementById('booksContainer');
            
            if (books.length === 0) {
                container.innerHTML = '<div class="error">Nenhum livro encontrado</div>';
                return;
            }
            
            const booksGrid = document.createElement('div');
            booksGrid.className = 'books-grid';
            
            books.forEach(book => {
                const bookCard = document.createElement('div');
                bookCard.className = 'book-card';
                bookCard.innerHTML = `
                    <div class="book-title">${book.title}</div>
                    <div class="book-author">por ${book.author}</div>
                    <div class="book-category">${book.category().name}</div>
                    <div class="book-description">${book.description || 'Sem descriÃ§Ã£o'}</div>
                    <div class="book-actions">
                        <button class="btn btn-small" onclick="readBook('${book.id}')">Ler</button>
                        <button class="btn btn-small btn-secondary" onclick="editBook('${book.id}')">Editar</button>
                        <button class="btn btn-small btn-danger" onclick="deleteBook('${book.id}')">Deletar</button>
                    </div>
                `;
                booksGrid.appendChild(bookCard);
            });
            
            container.innerHTML = '';
            container.appendChild(booksGrid);
        }
        
        // Buscar livros
        async function searchBooks() {
            const query = document.getElementById('searchQuery').value;
            const categoryId = document.getElementById('categoryFilter').value;
            
            let url = '/books?';
            const params = new URLSearchParams();
            
            if (query) params.append('query', query);
            if (categoryId) params.append('category_id', categoryId);
            
            url += params.toString();
            
            try {
                const response = await fetch(url);
                const data = await response.json();
                
                if (data.success) {
                    displayBooks(data.data);
                } else {
                    document.getElementById('searchResults').innerHTML = `<div class="error">Erro: ${data.message}</div>`;
                }
            } catch (err) {
                document.getElementById('searchResults').innerHTML = '<div class="error">Erro de conexÃ£o</div>';
            }
        }
        
        // Mostrar modal de criaÃ§Ã£o
        function showCreateBookModal() {
            currentBookId = null;
            document.getElementById('modalTitle').textContent = 'Criar Novo Livro';
            document.getElementById('bookForm').reset();
            document.getElementById('bookModal').style.display = 'block';
        }
        
        // Editar livro
        async function editBook(bookId) {
            try {
                const response = await fetch(`/books/${bookId}`);
                const data = await response.json();
                
                if (data.success) {
                    const book = data.data;
                    currentBookId = bookId;
                    document.getElementById('modalTitle').textContent = 'Editar Livro';
                    document.getElementById('bookTitle').value = book.title;
                    document.getElementById('bookAuthor').value = book.author;
                    document.getElementById('bookIsbn').value = book.isbn || '';
                    document.getElementById('bookCategory').value = book.category_id;
                    document.getElementById('bookDescription').value = book.description || '';
                    document.getElementById('bookContent').value = book.content;
                    document.getElementById('bookPublic').checked = book.is_public;
                    document.getElementById('bookModal').style.display = 'block';
                }
            } catch (err) {
                console.error('Erro ao carregar livro:', err);
            }
        }
        
        // Ler livro
        async function readBook(bookId) {
            try {
                const response = await fetch(`/books/${bookId}`);
                const data = await response.json();
                
                if (data.success) {
                    const book = data.data;
                    document.getElementById('readTitle').textContent = book.title;
                    document.getElementById('readContent').textContent = book.content;
                    document.getElementById('readModal').style.display = 'block';
                }
            } catch (err) {
                console.error('Erro ao carregar livro:', err);
            }
        }
        
        // Deletar livro
        async function deleteBook(bookId) {
            if (!confirm('Tem certeza que deseja deletar este livro?')) return;
            
            try {
                const response = await fetch(`/books/${bookId}`, {
                    method: 'DELETE'
                });
                const data = await response.json();
                
                if (data.success) {
                    loadBooks();
                } else {
                    alert('Erro: ' + data.message);
                }
            } catch (err) {
                alert('Erro de conexÃ£o');
            }
        }
        
        // Salvar livro
        document.getElementById('bookForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const bookData = {
                title: document.getElementById('bookTitle').value,
                author: document.getElementById('bookAuthor').value,
                isbn: document.getElementById('bookIsbn').value || null,
                category_id: document.getElementById('bookCategory').value,
                description: document.getElementById('bookDescription').value || null,
                content: document.getElementById('bookContent').value,
                is_public: document.getElementById('bookPublic').checked
            };
            
            try {
                const url = currentBookId ? `/books/${currentBookId}` : '/books';
                const method = currentBookId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(bookData)
                });
                
                const data = await response.json();
                
                if (data.success) {
                    closeBookModal();
                    loadBooks();
                } else {
                    alert('Erro: ' + data.message);
                }
            } catch (err) {
                alert('Erro de conexÃ£o');
            }
        });
        
        // Fechar modais
        function closeBookModal() {
            document.getElementById('bookModal').style.display = 'none';
        }
        
        function closeReadModal() {
            document.getElementById('readModal').style.display = 'none';
        }
        
        // Fechar modais clicando fora
        window.onclick = function(event) {
            const bookModal = document.getElementById('bookModal');
            const readModal = document.getElementById('readModal');
            
            if (event.target === bookModal) {
                closeBookModal();
            }
            if (event.target === readModal) {
                closeReadModal();
            }
        }
    </script>
</body>
</html>
